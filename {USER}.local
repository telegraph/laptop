#!/bin/sh
# PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/MacGPG2/bin

# Get the some path - used to include other files 
SCRIPT_PATH=`dirname "$(cd "${0%/*}" 2>/dev/null; echo "$PWD"/"${0##*/}")"`
PARENT_PATH=`dirname "$SCRIPT_PATH"`
CONFIG_PATH="$PARENT_PATH/config"
BIN_PATH="$PARENT_PATH/bin"

# set some vars to references from one place
FUNCTIONS="$BIN_PATH/functions.sh"
BREWFILE_LOCAL="$CONFIG_PATH/Brewfile.local"


echo "Checking preferences from $USER.local"

#########################################[ OH MY ZSH ]########################
# Assumes you want ZSH and not BASH
if [ ! -d "$HOME/.oh-my-zsh" ]; then
	echo "Setup oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
fi

# useful for updating zshrc without duplicating entries
append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\n" "$text" >> "$zshrc"
    else
      printf "\n%s\n" "$text" >> "$zshrc"
    fi
  fi
}

###############################[ user specific apps ]########################
fancy_echo "Installing user specifice apps from Brewfile.local"
# generic apps for all engineers
if brew bundle --file="$BREWFILE_LOCAL"; then
  echo "All items in Brewfile were installed successfully."
else
  echo "Some items in Brewfile were not installed successfully."
fi